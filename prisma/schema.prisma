generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//user
model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum VehicleStatus {
  AVAILABLE
  SOLD
  PENDING
}

enum FuelType {
  PETROL
  DIESEL
  ELECTRIC
  HYBRID
  CNG
}

// enum TransmissionType {
//   MANUAL
//   AUTOMATIC
// }

enum DriveType {
  FWD
  RWD
  AWD
  FOUR_WD
}

model Car {
  id          Int           @id @default(autoincrement())
  title       String
  description String?
  status      VehicleStatus @default(AVAILABLE)

  // --- Pricing ---

  sellingPrice Float
  cutOffPrice  Float
  ybtPrice     Float

  // --- Ownership & History ---

  registrationYear   Int
  registrationNumber String  @unique
  manufactureYear    Int?
  kmsDriven          Int
  ownerCount         Int
  insurance          String?

  //Other Specs
  listedBy  String
  badges    String[]
  vipNumber Boolean  @default(false)
  city      String?
  state     String?

  //car details
  brand           String?
  carUSP          String?
  carType         String?
  transmission    String?
  exteriorColour  String?
  peakTorque      String?
  peakPower       String?
  doors           Int?
  driveType       DriveType?
  seatingCapacity Int?
  engine          String?
  fuelType        FuelType   @default(PETROL)
  mileage         Float?

  carImages String[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Bike {
  id                 Int      @id @default(autoincrement())
  title              String
  listedBy           String
  registrationYear   Int
  kmsDriven          Int
  ownerCount         Int
  badges             String[]
  description        String?
  registrationNumber String   @unique
  vipNumber          Boolean  @default(false)
  sellingPrice       Float
  cutOffPrice        Float
  ybtPrice           Float
  brand              String?
  insurance          String?
  bikeUSP            String?
  fuelType           String
  bikeImages         String[]
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

model Event {
  id               String   @id @default(cuid())
  title            String
  slug             String   @unique
  description      String?
  maxAttendees     Int?
  currentAttendees Int
  location         String
  startDate        DateTime
  endDate          DateTime
  imageUrls        String[] // Renamed for clarity (plural)
  primaryImage     String? // Make optional
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@map("events")
}
